<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Passion&#39;s Blog</title>
  
  
  <link href="https://pass1on.fun/atom.xml" rel="self"/>
  
  <link href="https://pass1on.fun/"/>
  <updated>2022-03-07T11:26:06.837Z</updated>
  <id>https://pass1on.fun/</id>
  
  <author>
    <name>Passion</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>npm 安装指定版本依赖</title>
    <link href="https://pass1on.fun/2022/03/07/npm-%E5%AE%89%E8%A3%85%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E4%BE%9D%E8%B5%96/"/>
    <id>https://pass1on.fun/2022/03/07/npm-%E5%AE%89%E8%A3%85%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E4%BE%9D%E8%B5%96/</id>
    <published>2022-03-07T11:15:08.000Z</published>
    <updated>2022-03-07T11:26:06.837Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>先在 <em>package.json</em> 里修改好指定版本号，然后输入:</p><p><code>npm update d3</code></p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>输入： <code>npm update d3@5.15.0</code></p><p>会把 <em>d3.js</em> 更新至指定版本，但是不会写到 <em>package.json</em> 文件里，如果需要写到 <em>package.json</em> 里执行如下命令:</p><p><code>npm update d3@5.15.0 --save</code></p><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><ol><li><a class="link" href="https://npmmirror.com/">淘宝镜像<i class="fas fa-external-link-alt"></i></a></li><li><a class="link" href="https://www.npmjs.com/">npmjs 官网<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
    <summary type="html">本文介绍 npm 安装依赖至指定版本的方法</summary>
    
    
    
    <category term="问题解决" scheme="https://pass1on.fun/categories/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
    
    <category term="npm" scheme="https://pass1on.fun/tags/npm/"/>
    
    <category term="依赖" scheme="https://pass1on.fun/tags/%E4%BE%9D%E8%B5%96/"/>
    
  </entry>
  
  <entry>
    <title>Java-剑指offer题解</title>
    <link href="https://pass1on.fun/2022/03/06/Java-%E5%89%91%E6%8C%87offer%E9%A2%98%E8%A7%A3/"/>
    <id>https://pass1on.fun/2022/03/06/Java-%E5%89%91%E6%8C%87offer%E9%A2%98%E8%A7%A3/</id>
    <published>2022-03-06T13:36:44.000Z</published>
    <updated>2022-03-07T11:18:07.942Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数组中重复的数字"><a href="#数组中重复的数字" class="headerlink" title="数组中重复的数字"></a>数组中重复的数字</h1><p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p><p>示例 1：</p><p>输入：<br>[2, 3, 1, 0, 2, 5, 3]<br>输出：2 或 3 </p><p>限制：</p><p>2 &lt;= n &lt;= 100000</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findRepeatNumber</span><span class="params">(<span class="type">int</span>[] nums)</span> {</span><br><span class="line">        Set&lt;Integer&gt; dic = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num : nums) {</span><br><span class="line">            <span class="keyword">if</span>(dic.contains(num)) <span class="keyword">return</span> num;</span><br><span class="line">            dic.add(num);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="二维数组中的查找"><a href="#二维数组中的查找" class="headerlink" title="二维数组中的查找"></a>二维数组中的查找</h1><p>在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p><p>示例:</p><p>现有矩阵 matrix 如下：</p><p>[<br>  [1,   4,  7, 11, 15],<br>  [2,   5,  8, 12, 19],<br>  [3,   6,  9, 16, 22],<br>  [10, 13, 14, 17, 24],<br>  [18, 21, 23, 26, 30]<br>]<br>给定 target = 5，返回 true。</p><p>给定 target = 20，返回 false。</p><p>限制：</p><p>0 &lt;= n &lt;= 1000</p><p>0 &lt;= m &lt;= 1000</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">findNumberIn2DArray</span><span class="params">(<span class="type">int</span>[][] matrix, <span class="type">int</span> target)</span> {</span><br><span class="line">        <span class="keyword">if</span> (matrix == <span class="literal">null</span> || matrix.length == <span class="number">0</span> || matrix[<span class="number">0</span>].length == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> matrix.length, cols = matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> <span class="number">0</span>, c = cols - <span class="number">1</span>; <span class="comment">// 从右上角开始</span></span><br><span class="line">        <span class="keyword">while</span> (r &lt;= rows - <span class="number">1</span> &amp;&amp; c &gt;= <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">if</span> (target == matrix[r][c])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; matrix[r][c])</span><br><span class="line">                r++;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                c--;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="替换空格"><a href="#替换空格" class="headerlink" title="替换空格"></a>替换空格</h1><p>请实现一个函数，把字符串 s 中的每个空格替换成”%20”。</p><p>示例 1：</p><p>输入：s = “We are happy.”<br>输出：”We%20are%20happy.”</p><p>限制：</p><p>0 &lt;= s 的长度 &lt;= 10000</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">replaceSpace</span><span class="params">(String s)</span> {</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">for</span>(Character c : s.toCharArray())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(c == <span class="string">' '</span>) res.append(<span class="string">"%20"</span>);</span><br><span class="line">            <span class="keyword">else</span> res.append(c);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="从尾到头打印链表"><a href="#从尾到头打印链表" class="headerlink" title="从尾到头打印链表"></a>从尾到头打印链表</h1><p>输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。</p><p>示例 1：</p><p>输入：head = [1,3,2]<br>输出：[2,3,1]</p><p>限制：</p><p>0 &lt;= 链表长度 &lt;= 10000</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode {</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) { val = x; }</span></span><br><span class="line"><span class="comment"> * }</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] reversePrint(ListNode head) {</span><br><span class="line">        LinkedList&lt;Integer&gt; stack = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">while</span>(head != <span class="literal">null</span>) {</span><br><span class="line">            stack.addLast(head.val);</span><br><span class="line">            head = head.next;</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[stack.size()];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; res.length; i++)</span><br><span class="line">            res[i] = stack.removeLast();</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">Java-《剑指offer》题解</summary>
    
    
    
    <category term="题解" scheme="https://pass1on.fun/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="Java" scheme="https://pass1on.fun/tags/Java/"/>
    
    <category term="题解" scheme="https://pass1on.fun/tags/%E9%A2%98%E8%A7%A3/"/>
    
    <category term="算法" scheme="https://pass1on.fun/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="Leetcode" scheme="https://pass1on.fun/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GithubPages-搭建博客</title>
    <link href="https://pass1on.fun/2021/12/31/Hexo-GithubPages-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://pass1on.fun/2021/12/31/Hexo-GithubPages-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-12-31T11:59:39.000Z</published>
    <updated>2022-03-06T15:05:53.477Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="准备任务"><a href="#准备任务" class="headerlink" title="准备任务"></a>准备任务</h1><h2 id="Github-账号"><a href="#Github-账号" class="headerlink" title="Github 账号"></a>Github 账号</h2><p>注册一个 <a class="link" href="https://github.com/">github<i class="fas fa-external-link-alt"></i></a> 账号，并记住<strong>用户名</strong>与<strong>注册邮箱</strong></p><p><a class="link" href="https://blog.csdn.net/qq_41798899/article/details/120133809">Github 账号注册过程<i class="fas fa-external-link-alt"></i></a></p><h2 id="Git-安装"><a href="#Git-安装" class="headerlink" title="Git 安装"></a>Git 安装</h2><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a class="link" href="https://git-scm.com/downloads">Git 下载<i class="fas fa-external-link-alt"></i></a></p><h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h3><p><a class="link" href="https://blog.csdn.net/weixin_48249606/article/details/120338626">Git 安装教程<i class="fas fa-external-link-alt"></i></a></p><h2 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h2><h3 id="下载地址-1"><a href="#下载地址-1" class="headerlink" title="下载地址"></a>下载地址</h3><p><a class="link" href="https://nodejs.org/zh-cn/">Node.js 下载<i class="fas fa-external-link-alt"></i></a></p><h3 id="安装教程-1"><a href="#安装教程-1" class="headerlink" title="安装教程"></a>安装教程</h3><p><a class="link" href="https://blog.csdn.net/weixin_42881768/article/details/105028164">Node.js 安装及环境配置教程<i class="fas fa-external-link-alt"></i></a></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>按照上述教程<strong>配置环境变量</strong>并<strong>验证是否安装成功</strong></p><p>在命令行分别输入</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></tbody></table></figure><h2 id="Typora-下载-（可选）"><a href="#Typora-下载-（可选）" class="headerlink" title="Typora 下载 （可选）"></a>Typora 下载 （可选）</h2><p>Hexo 支持 Markdown 语法来写文章，推荐使用 Typora 作为文本编辑器</p><p><a href="https://pass1on.fun/2021/12/31/Typora-%E4%B8%8B%E8%BD%BD/">Typora 下载</a></p><h2 id="Notepad-下载-（可选）"><a href="#Notepad-下载-（可选）" class="headerlink" title="Notepad++ 下载 （可选）"></a>Notepad++ 下载 （可选）</h2><p>在编辑配置文档的时候我们可以用 Notepad++ 来编辑文档</p><p><a class="link" href="https://blog.csdn.net/m0_51538362/article/details/115266117">Notepad++ 下载与安装教程<i class="fas fa-external-link-alt"></i></a></p><h1 id="创建-Github-仓库"><a href="#创建-Github-仓库" class="headerlink" title="创建 Github 仓库"></a>创建 Github 仓库</h1><p>新建一个仓库</p><p>仓库名固定： <strong>用户名</strong>.github.io</p><p><img lazyload="" src="/images/loading.svg" data-src="https://gitee.com/lps1183710108/pic4md/raw/master/image-20220101131240737.png" alt="image-20220101131240737"></p><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>命令行输入</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></tbody></table></figure><p>验证安装是否成功</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></tbody></table></figure><h1 id="绑定仓库"><a href="#绑定仓库" class="headerlink" title="绑定仓库"></a>绑定仓库</h1><p>进入任何一个文件夹中，在空白区域右键选择 <em>Git Bash Here</em></p><p>在 git 命令行输入 <code>ssh-keygen -t rsa -C "注册 github 时所用邮箱"</code> 并敲 <strong>4</strong> 次回车</p><p>进入 <em>C:\Users\你的用户名\.ssh</em> 文件夹 </p><p>右键选中 <em>id_rsa.pub</em> 文件，选择使用 <em>Notepad++</em> 打开</p><p><strong>全选</strong>文件内容并<strong>复制</strong></p><p>打开 GitHub 找到 <code>Settings</code></p><p><img lazyload="" src="/images/loading.svg" data-src="https://gitee.com/lps1183710108/pic4md/raw/master/image-20220101154550897.png" alt="image-20220101154550897"></p><p>选择 <code>SSH and GPG keys</code> 之后选择 <code>New SSH key</code></p><p><img lazyload="" src="/images/loading.svg" data-src="https://gitee.com/lps1183710108/pic4md/raw/master/image-20220101154823639.png" alt="image-20220101154823639"></p><p>在 <em>Title</em> 中输入任意内容，在 <em>Key</em> 中将刚才复制内容粘贴</p><p><img lazyload="" src="/images/loading.svg" data-src="https://gitee.com/lps1183710108/pic4md/raw/master/image-20220101155105839.png" alt="image-20220101155105839"> </p><p>在 git 命令行输入 <code>ssh -T git@github.com</code></p><p>回答 <code>yes</code> 显示 <code>Hi XXX! You've successfully......</code> 代表绑定成功</p><h1 id="本地生成博客"><a href="#本地生成博客" class="headerlink" title="本地生成博客"></a>本地生成博客</h1><p>选择指定路径新建 <em>Blog</em> 文件夹作文博客本地仓库</p><p>在空白区域右键选择 <em>Git Bash Here</em></p><p>在 git 命令行依次输入</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></tbody></table></figure><p>打开浏览器输入 <em><a class="link" href="http://localhost:4000/">http://localhost:4000<i class="fas fa-external-link-alt"></i></a></em> 查看效果</p><h1 id="发布博客到互联网"><a href="#发布博客到互联网" class="headerlink" title="发布博客到互联网"></a>发布博客到互联网</h1><p>在刚才新建的 <em>Blog</em> 文件夹下，右键选择生成的 <em>_config.yml</em> 文件，选择使用 <em>Notepad++</em> 打开</p><p>找到最后几行，将</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span></span><br></pre></td></tr></tbody></table></figure><p>选中<strong>删除</strong></p><p>并在原位置<strong>输入</strong> （注意是英文冒号，且冒号之后有空格）</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></tbody></table></figure><p><strong>保存</strong>关闭</p><p>在 <em>Blog</em> 文件夹中在空白区域右键选择 <em>Git Bash Here</em></p><p> 在 git 命令行依次输入</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p>验证你的 GitHub 账户</p><p>至此博客初步搭建过程结束，在浏览器输入 <em>用户名.github.io</em> 即可访问</p><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><ol><li><a class="link" href="https://www.bilibili.com/video/BV1mU4y1j72n?p=5&amp;share_source=copy_web">视频教程<i class="fas fa-external-link-alt"></i></a></li><li><a class="link" href="https://www.runoob.com/git/git-tutorial.html">Git 教程<i class="fas fa-external-link-alt"></i></a></li><li><a class="link" href="https://hexo.io/themes/">Hexo 主题<i class="fas fa-external-link-alt"></i></a></li><li><a class="link" href="https://blog.csdn.net/wsmrzx/article/details/81478945">Hexo 撰写文章教程<i class="fas fa-external-link-alt"></i></a></li><li><a href="https://pass1on.fun/2021/12/20/Hexo-%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/">Hexo 文章加密教程</a></li><li><a class="link" href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid 主题<i class="fas fa-external-link-alt"></i></a></li></ol>]]></content>
    
    
    <summary type="html">Hexo + Github Pages 简单快速搭建个人博客</summary>
    
    
    
    <category term="过程记录" scheme="https://pass1on.fun/categories/%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Hexo" scheme="https://pass1on.fun/tags/Hexo/"/>
    
    <category term="博客搭建" scheme="https://pass1on.fun/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Csgo_config</title>
    <link href="https://pass1on.fun/2021/12/20/Csgo-config/"/>
    <id>https://pass1on.fun/2021/12/20/Csgo-config/</id>
    <published>2021-12-20T13:37:29.000Z</published>
    <updated>2022-03-06T15:05:47.359Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7803d72becc6b3346b259c237c772a26973e5d323f2cce9aca90a63f42a30d9b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">No access</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">No access</summary>
    
    
    
    <category term="加密" scheme="https://pass1on.fun/categories/%E5%8A%A0%E5%AF%86/"/>
    
    
    <category term="Csgo" scheme="https://pass1on.fun/tags/Csgo/"/>
    
    <category term="加密" scheme="https://pass1on.fun/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-博客文章加密</title>
    <link href="https://pass1on.fun/2021/12/20/Hexo-%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
    <id>https://pass1on.fun/2021/12/20/Hexo-%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</id>
    <published>2021-12-20T12:33:05.000Z</published>
    <updated>2022-03-06T15:06:02.055Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8f189720edb528b8d9c13cbda8e899593ffe607a2c5a7b21edf5bb61e59e911b">90b802059200f1da98db072b6ecfd0773c36ace9dbc40f29f373934aed324c15327362b5fcd32884642c32acf991b2727a2a919f1266872d12f60bb602f6c75e3200c158761dff40d4b5c5b2ee60b3aade14027992018d0904d28c602a34b9008755323b6e6f2e03999640a4c40e6a02c1a904a47d1c0a381100e5d74199c74aa48ea7953e9ea0e9df5b5fc6b712a897c98693a1a5afb9345cd703e908a9005eae91a358da93abb1aea81a19a07eeafdf909cf25a837c4795c380cb4c7214971365fc03be0826e9e07826063ff6bd693e1d109b536aec885b6d991f68602522ffe45e580549f5ef7c47708b670425541bfb86bf797c5995cf391f9cccc5a3381e2fd12723268790461f4719fda9f30807e417ae213d7cdd575380b2cd497df2b02c2ff83c043dab30444d5676e61eef9da824d853410852e4a794e6b4c019eee299c65f7d6c225a1d5ab552f4039628f7a6c950913f40a2fc18a0d973491cb459a9c6566c162695851e2d5fa3f13d7796b65dbe619cf3c6bd87078813dee233f781e4d6d4bb77ce8b6caccc4190ccb0eb4c9cfadb8ba69c754dd9969301f4a86b071d10b459881be34be624942fb55d054b6a3ab4325a4d049f8b48b35525518480ea8a7ab487cdff1f3e7ebdee4f29269dcb08f1217f956f1e20fc47dfb9e44f05bfab1d2ab0215b5ea7f0002aa1582f84f8c9339b412c2c0385917a70997aa40e476568140844c40368053276dae4a0ad598ea13adbf81035ff5249789abdbc1ade4e60677af6742346c41914574d1fbca655e2054b1c77c8232b651e274deab64e4e160b51865ab0e0065ad9484eeedb7e3753060eca74dfe58774b420766b4cefc766987cd360f5b3c797c0b31f145d24b016c77d4ca8ef3e682f3a92616078d4250a03a74e76dd7e9a2bd43ae47636ada2929fd3e8cb5d5ec5edc15caf2f44f2316b360b108584648bfb2c25547accd601ca3b4688f0303eda85c2d24dc2e96f3a171ac41b0526c2670a6f832b4343e46c2164bfb290f677d1b0438081f9c17cf65dc24c4e94ee87ced1f232c4826c0ba6d347c6e82d7e267da05d8e72011916b9302be7042b9e9e8bce632ef6528fd18ff33cfb43c3b30b83ab58017491a4520b9ef3b39f2f232cc1116334e03ffcec8a8f109b406ffc56cc6d3e5744a9b691d39bf11d9eb64fe2769243ffda2ea8428a384bc6a3cdc8fd6e6f165c386f2765b8aea94e4ae42802bb14d5a6af77f64ec8d6d692e7585b511a55800ea527af9d645d2ceef3461577e60cb17cfa69a201519b173647bab7c577c53b22ac10224c05a3c3fae255d24b5cc7750acf39fd02d1553511ce00b22846abf8b951bf7aa35990132e0c7b218a46cc0af62c0e2edae53d46e84b346d8121b8aa457a1b77d374234f2a376c9c2f5e00592fb323131a8a01aed625ab1a8952eb1de2eeb86e2e4399cc5f1686b5b519b6d16ec39922bea3a220867783c9f7bbe35e98afff84719880df9b55aa85d31da68e9ea3a5440a8fb3ce840147607cd20b4f1d576c0812d49e7c6957b5da0fd8a7240e8be2b2d9c7380e65effa243481811972a5bcd796bcd1bd5dcb6903bca4751296f63a22db5eeb266cd798ad71c5b984a9135dbc019d3f366eb86ce3c5c99db58967fbbb9b347c2b8c6771fb38559abbd4a3392a6868547caf9dde992a45aa6e85234ba2e55553dc199b577ba1b2f96cfb592f4c9cd8f583924591468e62803812555704d3b16bab4991bc8d2fa51d47c8ab8011aac76f693780341bc07b569ee880a6136650597edc59823d29bcb6ee3ae94ccfad91607d4b484b3940f6e054b9dbce6b685425982c16aa2de7c16b3f3fc3cce100e212b6c2a696c57ba587d5920405ae274755039f9fff16f626f0df702a766612ae2e183b020d91d8b12311fdda0360164039fd37283d432e68b433d02084d648696f73cb46c89240a55ad56c4d8548987113a5cc2588388565d69bf976102b9045724598b6c18fe07db807aadcd815f927451a1bf82c73a9e58150ddb3acceb2be9f635455230be2cfcb55e4b9d9abf8f8cb87802006019f2c3d29598c16868a01cb0204f4d5f550e80eb088fc8361740bedb62244c040a9a7164951af4b8b3db28b4bf7b0af11c6863ec4b8b810f28052919b648e796703dded576d89f9e94dc57814cc51d0aa0943b7e9eff9cdde1e8e8835e0f94e0108cfbce6a92a89f2d778cfa003eb070b935abdc2b5fbf030aa7707945822a1cdc44669b35c3ad6a2719a41fb8563c96e8384ff41e9e2bd07cec164dcda14b09b967a42baf88ab24b99ef2bf75eb7fc6cf5e857a5f67f5b0d5c9f1a05abecb112d722e650abb4961d8b8c892d8ff0cf6b6cf5c2c9b151efec5a4621caed707629a90af09927dd57ff13ded31b00e3812da295cbbde4057e271756adedae05e3947fdfc0ef4f4c67b5a7693aa96d53e6e7c67b73890d103240185b31cc18503c26981ebb29ec81f71b35a9b07278a90f1fa440c4740995b0b7ccf4eb89f794315bf0d0cfcf240cc40c842491c4b3ec29af851fb361803ba641bcce24556d9dc52208aa35784bf27a6f80ac64d58990a089a1049d33294bb84570a3fc9f05916b2c405bc77598c74b94ce7c8108921b0951b802114fa96e4bf3225af90f3e7699f2155813b9fb636a4511e3251a1b2b314e16ba8b819bfbb277014521c2df0ed117f0e0ac5f9176f192b91c2d4b5fa76fee096d0b344b96d9b8869c394787e73bc473b4ba6f35bf82d1b72bebd19c99257b49d790095d1686debfc8f3403281e3a9138cd370572ef24f1f1b436592cde0e43a3953358feba1d3523bb7a7ac6addefc795937ac24ddcffa7bb437948b25dc04e7f71af79d882b7a29f30f3ddc06e8a154a12b2f17323d689a672b9995f9532a9fce37f9fe2ee958dbc5fa7329030a633bdb4a5be5c78dc29c33690ce3507eeabf4b7796721d1debe4d42dab31933f66da2ae61cec25e215a97c29b81bec98e2bf976ab8271a906039eb967c5c60d8e3b0b5ee9d4a74128d081ed62413427e0e3b6a62665dc27628f38effa684a40a81809c23f1878024d0007bcf2a74a2889576f78ed9ea127d81faaf7bfa240f97737a065d29efa8f9d68fccf317bfa2328c31728e2aa02dd75081fce34862e8c3ceb1856d21cb6376eaf1553eae3a87ebcb235b85c649f9b793e62be229115b04ec82f36cce14b8ca0237096367114bb9b66d5153428fe8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码是 helloworld</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">密码是 helloworld</summary>
    
    
    
    <category term="博客搭建" scheme="https://pass1on.fun/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Hexo" scheme="https://pass1on.fun/tags/Hexo/"/>
    
    <category term="博客搭建" scheme="https://pass1on.fun/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Python-合并多个csv文件</title>
    <link href="https://pass1on.fun/2021/12/20/Python-%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AAcsv%E6%96%87%E4%BB%B6/"/>
    <id>https://pass1on.fun/2021/12/20/Python-%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AAcsv%E6%96%87%E4%BB%B6/</id>
    <published>2021-12-20T12:32:31.000Z</published>
    <updated>2022-03-06T15:06:21.908Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">inputfile = <span class="string">"文件夹路径\*.csv"</span></span><br><span class="line">outputfile = <span class="string">"输出合并文件路径\mergeResult.csv"</span></span><br><span class="line">csv_list = glob.glob(inputfile)</span><br><span class="line"></span><br><span class="line">filepath = csv_list[<span class="number">0</span>]</span><br><span class="line">df = pd.read_csv(filepath)</span><br><span class="line">df = df.to_csv(outputfile, index=<span class="literal">False</span>)    <span class="comment">#编码默认 UTF-8 ，若乱码自行更改</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(csv_list)):</span><br><span class="line">    filepath = csv_list[i]</span><br><span class="line">    df = pd.read_csv(filepath)</span><br><span class="line">    df = df.to_csv(outputfile, index=<span class="literal">False</span>, header=<span class="literal">False</span>, mode=<span class="string">'a+'</span>)</span><br></pre></td></tr></tbody></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p><code>header=False</code>  保证后续 <em>.csv</em> 文件是不保存列名的</p><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><p>Pandas 教程 <a class="link" href="https://www.pypandas.cn/">Pandas 中文网<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
    <summary type="html">使用 Python 将文件夹下多个 .csv 文件合并</summary>
    
    
    
    <category term="Python" scheme="https://pass1on.fun/categories/Python/"/>
    
    
    <category term="Python" scheme="https://pass1on.fun/tags/Python/"/>
    
    <category term="文件操作" scheme="https://pass1on.fun/tags/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
    <category term="csv" scheme="https://pass1on.fun/tags/csv/"/>
    
    <category term="Pandas" scheme="https://pass1on.fun/tags/Pandas/"/>
    
  </entry>
  
  <entry>
    <title>Python-doc/docx/txt文件批量转换</title>
    <link href="https://pass1on.fun/2021/12/19/Python-doc-docx-txt%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2/"/>
    <id>https://pass1on.fun/2021/12/19/Python-doc-docx-txt%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E8%BD%AC%E6%8D%A2/</id>
    <published>2021-12-19T06:55:21.000Z</published>
    <updated>2022-03-06T15:06:16.110Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><ol><li><p>将文件夹中 <em>doc</em> 文件批量保存为 <em>docx</em> 文件</p></li><li><p>将文件夹中 <em>docx</em> 文件批量保存为 <em>txt</em> 文件</p></li></ol><h1 id="doc2docx"><a href="#doc2docx" class="headerlink" title="doc2docx"></a><em>doc2docx</em></h1><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p><em>python-docx</em> 只能处理 <em>Word2007</em> 以后的版本 (.docx) </p><p>使用 <em>python-docx</em> 库读取文档前需要将 <em>doc</em> 文件保存为 <em>docx</em> 文件</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> win32com <span class="keyword">import</span> client <span class="keyword">as</span> wc</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line">doc_path = <span class="string">r"D:\workspace\python\KGProject\syllabus"</span></span><br><span class="line">temp_dir = <span class="string">"temp"</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">f"<span class="subst">{doc_path}</span>/<span class="subst">{temp_dir}</span>"</span>):</span><br><span class="line">    shutil.rmtree(<span class="string">f"<span class="subst">{doc_path}</span>/<span class="subst">{temp_dir}</span>"</span>)</span><br><span class="line">os.mkdir(<span class="string">f"<span class="subst">{doc_path}</span>/<span class="subst">{temp_dir}</span>"</span>)</span><br><span class="line"></span><br><span class="line">word = wc.Dispatch(<span class="string">"Word.Application"</span>)  </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> Path(doc_path).glob(<span class="string">"*.doc"</span>):</span><br><span class="line">        file = <span class="built_in">str</span>(filename)</span><br><span class="line">        dest_name = <span class="built_in">str</span>(filename.parent/<span class="string">f"<span class="subst">{temp_dir}</span>"</span>/<span class="built_in">str</span>(filename.name))+<span class="string">"x"</span></span><br><span class="line">        <span class="built_in">print</span>(file, dest_name)</span><br><span class="line">        doc = word.Documents.Open(file)</span><br><span class="line">        <span class="comment"># 另存为后缀为 ".docx" 的文件，其中参数 16 指 docx 文件</span></span><br><span class="line">        doc.SaveAs(dest_name, <span class="number">16</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    word.Quit()</span><br></pre></td></tr></tbody></table></figure><h1 id="docx2txt"><a href="#docx2txt" class="headerlink" title="docx2txt"></a><em>docx2txt</em></h1><h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h2><p>将文档转换为 <em>txt</em> 文件方便处理纯文本数据</p><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> win32com <span class="keyword">import</span> client <span class="keyword">as</span> wc</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line">doc_path = <span class="string">r"D:\workspace\python\KGProject\syllabus"</span></span><br><span class="line">temp_dir = <span class="string">"temp"</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">f"<span class="subst">{doc_path}</span>/<span class="subst">{temp_dir}</span>"</span>):</span><br><span class="line">    shutil.rmtree(<span class="string">f"<span class="subst">{doc_path}</span>/<span class="subst">{temp_dir}</span>"</span>)</span><br><span class="line">os.mkdir(<span class="string">f"<span class="subst">{doc_path}</span>/<span class="subst">{temp_dir}</span>"</span>)</span><br><span class="line"></span><br><span class="line">word = wc.Dispatch(<span class="string">"Word.Application"</span>)  </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> Path(doc_path).glob(<span class="string">"*.docx"</span>):</span><br><span class="line">        file = <span class="built_in">str</span>(filename)</span><br><span class="line">        dest_name = <span class="built_in">str</span>(filename.parent/<span class="string">f"<span class="subst">{temp_dir}</span>"</span>/<span class="built_in">str</span>(filename.name[:-<span class="number">4</span>]))+<span class="string">"txt"</span></span><br><span class="line">        <span class="built_in">print</span>(file, dest_name)</span><br><span class="line">        doc = word.Documents.Open(file)</span><br><span class="line">        <span class="comment"># 另存为后缀为 ".txt" 的文件，其中参数 2 指 txt 文件</span></span><br><span class="line">        doc.SaveAs(dest_name, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    word.Quit()</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">使用 Python 实现 .doc/.docx/.txt 文件格式转换</summary>
    
    
    
    <category term="Python" scheme="https://pass1on.fun/categories/Python/"/>
    
    
    <category term="Python" scheme="https://pass1on.fun/tags/Python/"/>
    
    <category term="文件操作" scheme="https://pass1on.fun/tags/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
</feed>
